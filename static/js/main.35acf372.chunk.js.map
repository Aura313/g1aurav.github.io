{"version":3,"sources":["sections/main-section.js","sections/social-links-section.js","components/tag.js","sections/key-skills-section.js","sections/experience-section.js","App.js","serviceWorker.js","index.js"],"names":["MainSectionInner","classes","this","props","elevation","className","root","style","textAlign","src","maxWidth","maxHeight","borderRadius","variant","color","fontWeight","resumeData","name","personBio","paddingTop","shortDescription","React","MainSection","withStyles","display","gridGap","gridTemplateColumns","SocialLinksSection","padding","socialLinks","map","link","flex","href","address","fontSize","class","icon","backgroundColor","margin","text","KeySkillsSectionInner","title","titleTypographyProps","container","spacing","keySkills","mainSkills","skill","item","xs","sm","md","lg","logo","alt","skillLogo","value","level","marginTop","others","KeySkillsSection","height","colorPrimary","barColorPrimary","filter","opacity","transition","ExperienceSectionInner","experience","index","image","company","location","float","start","end","jobs","job","dense","alignSelf","primary","primaryTypographyProps","paddingLeft","length","ExperienceSection","require","App","state","overflowY","Spacer","tabText","tabIndicator","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35acf372.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Card, CardHeader, CardContent, Typography, Grid, withStyles } from '@material-ui/core';\n\nexport class MainSectionInner extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card elevation={0}>\n        <CardContent>\n          <div className={classes.root}>\n            <div style={{textAlign: 'center'}}>\n              <img src=\"./profile_photo.jpg\" style={{ maxWidth: 150, maxHeight: 150, borderRadius: 5 }} />\n            </div>\n            <div>\n              <Typography className=\"title\" variant=\"h4\" style={{color: '#5B6973', fontWeight: 500}}>{this.props.resumeData.name}</Typography>\n              <Typography className=\"title\" variant=\"caption\" color=\"textSecondary\">{this.props.resumeData.personBio}</Typography>\n\n              <Typography variant=\"body1\" style={{ paddingTop: 20, textAlign: 'justify' }} color=\"textSecondary\">{this.props.resumeData.shortDescription}</Typography>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\n\nconst styles = {\n  root: {\n    display: 'grid',\n    gridGap: '10px',\n    gridTemplateColumns: '150px auto',\n    '@media only screen and (max-width: 400px)': {\n      display: 'block',\n      '& .title': {\n        textAlign: 'center'\n      }\n    }\n  }\n};\n\nexport const MainSection = withStyles(styles)(MainSectionInner);\n\n","import * as React from 'react';\nimport { Card, CardContent } from '@material-ui/core';\n\nexport class SocialLinksSection extends React.Component {\n  render() {\n    return (\n      <Card elevation={0}>\n        <CardContent style={{padding: 10}}>\n          <div style={{ display: 'flex' }}>\n            {this.props.resumeData.socialLinks.map(link => (\n              <span style={{ flex: 1, textAlign: 'center' }}>\n                <a href={link.address} style={{ color: '#78909c', fontSize: 25 }}>\n                  {React.createElement(\"i\", { class: link.icon })}\n                </a>\n              </span>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n}","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default (props) => (\n  <Typography\n    variant=\"caption\"\n    style={{\n      display: 'inline-block',\n      backgroundColor: '#b0bec5',\n      fontSize: 11,\n      color: 'white',\n      margin: '0 5px 2px 0',\n      padding: '3px 5px',\n      borderRadius: 4,\n    }}\n  >\n    {props.text}\n  </Typography>\n)","import * as React from 'react';\nimport { Card, CardHeader, CardContent, Typography, Icon, Grid, LinearProgress, withStyles } from '@material-ui/core';\nimport Tag from '../components/tag';\n\nclass KeySkillsSectionInner extends React.Component {\n  render() {\n    return (\n      <Card elevation={0}>\n        <CardHeader title=\"Key Skills\" titleTypographyProps={{ variant: 'h5', style: {color: '#5B6973'} }} />\n        <CardContent>\n          <Grid container spacing={40}>\n            {this.props.resumeData.keySkills.mainSkills.map(skill => (\n              <Grid item xs={4} sm={3} md={2} lg={2}>\n                <img\n                  src={\"./assets/tech/\" + skill.logo}\n                  alt={skill.name}\n                  className={this.props.classes.skillLogo}\n                />\n\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={skill.level}\n                />\n                <div style={{ display: 'flex' }}>\n                  <div style={{ flex: 1 }}>\n                    <Typography variant=\"caption\" color=\"textSecondary\">{skill.name}</Typography>\n                  </div>\n\n                  <div>\n                    <Typography variant=\"caption\" color=\"textSecondary\">{skill.level + '%'}</Typography>\n                  </div>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n\n          <div style={{ marginTop: 30 }}>\n            <Typography variant=\"body1\" style={{ display: 'inline' }} color=\"textSecondary\">Other tech interests:</Typography>\n            <div>\n              {this.props.resumeData.keySkills.others.map(skill => <Tag text={skill}/>)}\n            </div>\n          </div>\n\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nconst styles = {\n  root: {\n    height: 12,\n    borderRadius: 5,\n    marginTop: 2,\n  },\n  colorPrimary: {\n    backgroundColor: '#e8eaf5',\n  },\n  barColorPrimary: {\n    backgroundColor: '#b0bec5',\n  },\n  skillLogo: {\n    padding: '0 20%',\n    maxWidth: '60%',\n    filter: 'grayscale(50%)',\n    opacity: 0.6,\n    transition: 'all ease 400ms',\n    '&:hover': {\n      opacity: 1,\n      filter: 'none',\n      // cursor: 'pointer'\n    }\n  }\n};\n\nexport const KeySkillsSection = withStyles(styles)(KeySkillsSectionInner);","import * as React from 'react';\nimport { Card, CardHeader, CardContent, withStyles, Typography, Divider, Icon, List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\n\n\nclass ExperienceSectionInner extends React.Component{\n  experience = (experience, index) => {\n    return (\n\n      <div>\n        <div className={this.props.classes.experience}>\n          <div style={{ textAlign: 'center' }}>\n            <img src={\"./assets/company/\" + experience.logo} className={this.props.classes.image} />\n          </div>\n          <div>\n            <div style={{ display: 'flex' }}>\n              <Typography variant=\"h6\" style={{ flex: 1, color: '#5B6973' }}>{experience.title}</Typography>\n              <div>\n                <Typography variant=\"caption\" style={{ color: '#5B6973AA' }}>{experience.company}, {experience.location}</Typography>\n                <Typography variant=\"caption\" style={{ float: 'right', color: '#5B6973AA' }}>{experience.start}-{experience.end}</Typography>\n              </div>\n            </div>\n            <List>\n              {experience.jobs.map(job => (\n                <ListItem dense style={{ padding: 0 }}>\n                  <ListItemIcon style={{ alignSelf: 'flex-start', fontSize: 6, margin: '6px 0 0', color: '#5B6973' }}><i className=\"fas fa-circle\" /></ListItemIcon>\n                  <ListItemText primary={job} primaryTypographyProps={{ variant: 'body1', style: { color: '#5B6973' } }} style={{ paddingLeft: 5 }} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </div>\n\n        {index !== (this.props.resumeData.experience.length - 1) &&\n          <Divider style={{ margin: 20 }} />\n        }\n      </div>\n\n\n    )\n  }\n\n  render() {\n    return (\n      <Card elevation={0}>\n        <CardHeader title=\"Experience\" titleTypographyProps={{ variant: 'h5', style: { color: '#5B6973' } }} />\n        <CardContent>\n          {this.props.resumeData.experience.map(this.experience)}\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\n\nconst styles = {\n  experience: {\n    display: 'grid',\n    gridGap: '10px',\n    gridTemplateColumns: '120px auto',\n    '@media only screen and (max-width: 400px)': {\n      display: 'block'\n    }\n  },\n  image: {\n    maxWidth: 100,\n    maxHeight: 100,\n    borderRadius: 5,\n    filter: 'grayscale(50%)',\n    opacity: 0.8,\n    '@media only screen and (max-width: 400px)': {\n      maxWidth:'80%',\n      maxHeight:'80%',\n    }\n  }\n};\n\nexport const ExperienceSection = withStyles(styles)(ExperienceSectionInner);","import * as React from \"react\";\nimport { withStyles } from '@material-ui/core';\nimport { MainSection } from \"./sections/main-section\";\nimport { SocialLinksSection } from \"./sections/social-links-section\";\nimport { KeySkillsSection } from \"./sections/key-skills-section\";\nimport { ExperienceSection } from \"./sections/experience-section\";\n// import { PortfolioSection } from \"./sections/portfolio-section\";\nconst resumeData = require('./resume-data.json');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div style={{ maxWidth: 800, margin: 'auto', padding: 5, overflowY: 'auto' }}>\n        <MainSection resumeData={resumeData}/>\n        <Spacer/>\n        <SocialLinksSection resumeData={resumeData}/>\n        <Spacer/>\n        <KeySkillsSection resumeData={resumeData}/>\n        <Spacer/>\n        {/* <PortfolioSection resumeData={resumeData}/>\n        <Spacer/> */}\n        <ExperienceSection resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nconst Spacer = ({height}) => <div style={{height: height || 10}}/>\n\nconst styles = {\n  root: {\n  },\n  tabText: {\n    color: '#fff',\n  },\n  tabIndicator: {\n    display: 'none',\n  }\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}